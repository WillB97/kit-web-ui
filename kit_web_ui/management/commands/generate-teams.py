"""
Create team accounts and MQTT credentials

Teams are named teamN, where N is the team number and is used for both the
username and mqtt username. The mqtt password is randomly generated and urlsafe.
Generated MQTT credentials use the broker listener specified by the --broker
argument. The topic root is set to the username.

If a wordlist is specified, the password is generated by choosing two words from
the wordlist and joining them with a hyphen. Otherwise, the password is a randomly
generated 12 character alphanumeric string.
"""
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    help = 'Generate team accounts and MQTT credentials'

    def add_arguments(self, parser) -> None:  # type: ignore
        parser.add_argument('--broker', required=True, type=str, help='Broker listener name')
        parser.add_argument(
            '--wordlist', type=str, help=(
                'Word list for password generation. If not specified, passwords will be '
                'randomly generated. i.e. /usr/share/dict/british-english'))
        parser.add_argument(
            '--num-teams', type=int, default=10, help='Number of teams to create')
        parser.add_argument(
            '--csv', type=str, help="Output generated details to the csv file")

    def handle(self, *args, **options) -> None:  # type: ignore
        import csv
        from secrets import token_urlsafe

        from django.contrib.auth.models import User

        from kit_web_ui.models import BrokerListener, MqttConfig
        from kit_web_ui.utils import generate_wordlist, generate_password

        details = []
        broker = BrokerListener.objects.get(name=options['broker'])

        if options['wordlist']:
            wordlist = generate_wordlist(options['wordlist'])
        else:
            wordlist = None

        for team in range(1, options['num_teams'] + 1):
            username = f"team{team}"
            password = generate_password(wordlist)
            user = User.objects.create_user(username, password=password)
            user.save()
            mqtt_password = token_urlsafe()
            mqtt_config = MqttConfig.objects.create(
                name=f"Team {team}",
                user=user,
                broker=broker,
                username=username,
                password=mqtt_password,
                topic_root=username,
                team_number=team,
            )
            mqtt_config.save()
            details.append({
                'username': username, 'password': password, 'mqtt_password': mqtt_password})
            self.stdout.write(f"Created team {team}: {username} {password}")

        if options['csv']:
            with open(options['csv'], 'w', newline='') as f:
                writer = csv.DictWriter(
                    f,
                    ['mac_addr', 'username', 'password', 'mqtt_password', 'wifi_password'],
                )
                writer.writeheader()
                writer.writerows(details)

        self.stdout.write("Done")
